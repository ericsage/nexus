// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyservice.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cyservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cyservice {

namespace {

const ::google::protobuf::Descriptor* Fragment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Fragment_reflection_ = NULL;
struct FragmentOneofInstance {
  const ::cyservice::MetaData* metadata_;
  const ::cyservice::Node* node_;
  const ::cyservice::Edge* edge_;
  const ::cyservice::NodeAttribute* nodeattribute_;
  const ::cyservice::EdgeAttribute* edgeattribute_;
  const ::cyservice::NetworkAttribute* networkattribute_;
  const ::cyservice::AnonymousAspect* aspect_;
}* Fragment_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* MetaData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetaData_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Node_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Node_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edge_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* EdgeAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EdgeAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetworkAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnonymousAspect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnonymousAspect_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cyservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_cyservice_2eproto() {
  protobuf_AddDesc_cyservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cyservice.proto");
  GOOGLE_CHECK(file != NULL);
  Fragment_descriptor_ = file->message_type(0);
  static const int Fragment_offsets_[8] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, metadata_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, node_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, edge_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, nodeattribute_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, edgeattribute_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, networkattribute_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Fragment_default_oneof_instance_, aspect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fragment, element_),
  };
  Fragment_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Fragment_descriptor_,
      Fragment::default_instance_,
      Fragment_offsets_,
      -1,
      -1,
      -1,
      Fragment_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fragment, _oneof_case_[0]),
      sizeof(Fragment),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fragment, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Fragment, _is_default_instance_));
  MetaData_descriptor_ = file->message_type(1);
  static const int MetaData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, idcounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, elementcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, consistencygroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, checksum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, properties_),
  };
  MetaData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetaData_descriptor_,
      MetaData::default_instance_,
      MetaData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MetaData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaData, _is_default_instance_));
  KeyValue_descriptor_ = file->message_type(2);
  static const int KeyValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, value_),
  };
  KeyValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyValue_descriptor_,
      KeyValue::default_instance_,
      KeyValue_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeyValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue, _is_default_instance_));
  Node_descriptor_ = file->message_type(3);
  static const int Node_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, represents_),
  };
  Node_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Node_descriptor_,
      Node::default_instance_,
      Node_offsets_,
      -1,
      -1,
      -1,
      sizeof(Node),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _is_default_instance_));
  Edge_descriptor_ = file->message_type(4);
  static const int Edge_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, sourceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, interaction_),
  };
  Edge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Edge_descriptor_,
      Edge::default_instance_,
      Edge_offsets_,
      -1,
      -1,
      -1,
      sizeof(Edge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _is_default_instance_));
  NodeAttribute_descriptor_ = file->message_type(5);
  static const int NodeAttribute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, subnetid_),
  };
  NodeAttribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NodeAttribute_descriptor_,
      NodeAttribute::default_instance_,
      NodeAttribute_offsets_,
      -1,
      -1,
      -1,
      sizeof(NodeAttribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAttribute, _is_default_instance_));
  EdgeAttribute_descriptor_ = file->message_type(6);
  static const int EdgeAttribute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, edgeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, subnetid_),
  };
  EdgeAttribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EdgeAttribute_descriptor_,
      EdgeAttribute::default_instance_,
      EdgeAttribute_offsets_,
      -1,
      -1,
      -1,
      sizeof(EdgeAttribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeAttribute, _is_default_instance_));
  NetworkAttribute_descriptor_ = file->message_type(7);
  static const int NetworkAttribute_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, edgeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, subnetid_),
  };
  NetworkAttribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkAttribute_descriptor_,
      NetworkAttribute::default_instance_,
      NetworkAttribute_offsets_,
      -1,
      -1,
      -1,
      sizeof(NetworkAttribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkAttribute, _is_default_instance_));
  AnonymousAspect_descriptor_ = file->message_type(8);
  static const int AnonymousAspect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnonymousAspect, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnonymousAspect, element_),
  };
  AnonymousAspect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnonymousAspect_descriptor_,
      AnonymousAspect::default_instance_,
      AnonymousAspect_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnonymousAspect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnonymousAspect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnonymousAspect, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cyservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Fragment_descriptor_, &Fragment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetaData_descriptor_, &MetaData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyValue_descriptor_, &KeyValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Node_descriptor_, &Node::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Edge_descriptor_, &Edge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NodeAttribute_descriptor_, &NodeAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EdgeAttribute_descriptor_, &EdgeAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkAttribute_descriptor_, &NetworkAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnonymousAspect_descriptor_, &AnonymousAspect::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cyservice_2eproto() {
  delete Fragment::default_instance_;
  delete Fragment_default_oneof_instance_;
  delete Fragment_reflection_;
  delete MetaData::default_instance_;
  delete MetaData_reflection_;
  delete KeyValue::default_instance_;
  delete KeyValue_reflection_;
  delete Node::default_instance_;
  delete Node_reflection_;
  delete Edge::default_instance_;
  delete Edge_reflection_;
  delete NodeAttribute::default_instance_;
  delete NodeAttribute_reflection_;
  delete EdgeAttribute::default_instance_;
  delete EdgeAttribute_reflection_;
  delete NetworkAttribute::default_instance_;
  delete NetworkAttribute_reflection_;
  delete AnonymousAspect::default_instance_;
  delete AnonymousAspect_reflection_;
}

void protobuf_AddDesc_cyservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_cyservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017cyservice.proto\022\tcyservice\"\315\002\n\010Fragmen"
    "t\022\'\n\010metadata\030\001 \001(\0132\023.cyservice.MetaData"
    "H\000\022\037\n\004node\030\002 \001(\0132\017.cyservice.NodeH\000\022\037\n\004e"
    "dge\030\003 \001(\0132\017.cyservice.EdgeH\000\0221\n\rnodeAttr"
    "ibute\030\004 \001(\0132\030.cyservice.NodeAttributeH\000\022"
    "1\n\redgeAttribute\030\005 \001(\0132\030.cyservice.EdgeA"
    "ttributeH\000\0227\n\020networkAttribute\030\006 \001(\0132\033.c"
    "yservice.NetworkAttributeH\000\022,\n\006aspect\030\007 "
    "\001(\0132\032.cyservice.AnonymousAspectH\000B\t\n\007ele"
    "ment\"\247\001\n\010MetaData\022\014\n\004name\030\001 \001(\t\022\017\n\007versi"
    "on\030\002 \001(\t\022\021\n\tidCounter\030\003 \001(\003\022\024\n\014elementCo"
    "unt\030\004 \001(\003\022\030\n\020consistencyGroup\030\005 \001(\003\022\020\n\010c"
    "hecksum\030\006 \001(\003\022\'\n\nproperties\030\007 \003(\0132\023.cyse"
    "rvice.KeyValue\"\'\n\010KeyValue\022\014\n\004name\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\t\"\?\n\004Node\022\017\n\002id\030\001 \001(\003R\003@id"
    "\022\017\n\004name\030\002 \001(\tR\001n\022\025\n\nrepresents\030\003 \001(\tR\001r"
    "\"Y\n\004Edge\022\017\n\002id\030\001 \001(\003R\003@id\022\023\n\010sourceId\030\002 "
    "\001(\003R\001s\022\023\n\010targetId\030\003 \001(\003R\001t\022\026\n\013interacti"
    "on\030\004 \001(\tR\001i\"l\n\rNodeAttribute\022\022\n\006nodeId\030\001"
    " \001(\003R\002po\022\017\n\004name\030\002 \001(\tR\001n\022\020\n\005value\030\003 \001(\t"
    "R\001v\022\017\n\004type\030\004 \001(\tR\001d\022\023\n\010subnetId\030\005 \001(\003R\001"
    "s\"l\n\rEdgeAttribute\022\022\n\006edgeId\030\001 \001(\003R\002po\022\017"
    "\n\004name\030\002 \001(\tR\001n\022\020\n\005value\030\003 \001(\tR\001v\022\017\n\004typ"
    "e\030\004 \001(\tR\001d\022\023\n\010subnetId\030\005 \001(\003R\001s\"o\n\020Netwo"
    "rkAttribute\022\022\n\006edgeId\030\001 \001(\003R\002po\022\017\n\004name\030"
    "\002 \001(\tR\001n\022\020\n\005value\030\003 \001(\tR\001v\022\017\n\004type\030\004 \001(\t"
    "R\001d\022\023\n\010subnetId\030\005 \001(\003R\001s\"0\n\017AnonymousAsp"
    "ect\022\014\n\004type\030\001 \001(\t\022\017\n\007element\030\002 \001(\0142N\n\tCy"
    "Service\022A\n\017StreamFragments\022\023.cyservice.F"
    "ragment\032\023.cyservice.Fragment\"\000(\0010\001b\006prot"
    "o3", 1202);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cyservice.proto", &protobuf_RegisterTypes);
  Fragment::default_instance_ = new Fragment();
  Fragment_default_oneof_instance_ = new FragmentOneofInstance();
  MetaData::default_instance_ = new MetaData();
  KeyValue::default_instance_ = new KeyValue();
  Node::default_instance_ = new Node();
  Edge::default_instance_ = new Edge();
  NodeAttribute::default_instance_ = new NodeAttribute();
  EdgeAttribute::default_instance_ = new EdgeAttribute();
  NetworkAttribute::default_instance_ = new NetworkAttribute();
  AnonymousAspect::default_instance_ = new AnonymousAspect();
  Fragment::default_instance_->InitAsDefaultInstance();
  MetaData::default_instance_->InitAsDefaultInstance();
  KeyValue::default_instance_->InitAsDefaultInstance();
  Node::default_instance_->InitAsDefaultInstance();
  Edge::default_instance_->InitAsDefaultInstance();
  NodeAttribute::default_instance_->InitAsDefaultInstance();
  EdgeAttribute::default_instance_->InitAsDefaultInstance();
  NetworkAttribute::default_instance_->InitAsDefaultInstance();
  AnonymousAspect::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cyservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cyservice_2eproto {
  StaticDescriptorInitializer_cyservice_2eproto() {
    protobuf_AddDesc_cyservice_2eproto();
  }
} static_descriptor_initializer_cyservice_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fragment::kMetadataFieldNumber;
const int Fragment::kNodeFieldNumber;
const int Fragment::kEdgeFieldNumber;
const int Fragment::kNodeAttributeFieldNumber;
const int Fragment::kEdgeAttributeFieldNumber;
const int Fragment::kNetworkAttributeFieldNumber;
const int Fragment::kAspectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fragment::Fragment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.Fragment)
}

void Fragment::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Fragment_default_oneof_instance_->metadata_ = const_cast< ::cyservice::MetaData*>(&::cyservice::MetaData::default_instance());
  Fragment_default_oneof_instance_->node_ = const_cast< ::cyservice::Node*>(&::cyservice::Node::default_instance());
  Fragment_default_oneof_instance_->edge_ = const_cast< ::cyservice::Edge*>(&::cyservice::Edge::default_instance());
  Fragment_default_oneof_instance_->nodeattribute_ = const_cast< ::cyservice::NodeAttribute*>(&::cyservice::NodeAttribute::default_instance());
  Fragment_default_oneof_instance_->edgeattribute_ = const_cast< ::cyservice::EdgeAttribute*>(&::cyservice::EdgeAttribute::default_instance());
  Fragment_default_oneof_instance_->networkattribute_ = const_cast< ::cyservice::NetworkAttribute*>(&::cyservice::NetworkAttribute::default_instance());
  Fragment_default_oneof_instance_->aspect_ = const_cast< ::cyservice::AnonymousAspect*>(&::cyservice::AnonymousAspect::default_instance());
}

Fragment::Fragment(const Fragment& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.Fragment)
}

void Fragment::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_element();
}

Fragment::~Fragment() {
  // @@protoc_insertion_point(destructor:cyservice.Fragment)
  SharedDtor();
}

void Fragment::SharedDtor() {
  if (has_element()) {
    clear_element();
  }
  if (this != default_instance_) {
  }
}

void Fragment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Fragment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Fragment_descriptor_;
}

const Fragment& Fragment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

Fragment* Fragment::default_instance_ = NULL;

Fragment* Fragment::New(::google::protobuf::Arena* arena) const {
  Fragment* n = new Fragment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Fragment::clear_element() {
// @@protoc_insertion_point(one_of_clear_start:cyservice.Fragment)
  switch(element_case()) {
    case kMetadata: {
      delete element_.metadata_;
      break;
    }
    case kNode: {
      delete element_.node_;
      break;
    }
    case kEdge: {
      delete element_.edge_;
      break;
    }
    case kNodeAttribute: {
      delete element_.nodeattribute_;
      break;
    }
    case kEdgeAttribute: {
      delete element_.edgeattribute_;
      break;
    }
    case kNetworkAttribute: {
      delete element_.networkattribute_;
      break;
    }
    case kAspect: {
      delete element_.aspect_;
      break;
    }
    case ELEMENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ELEMENT_NOT_SET;
}


void Fragment::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.Fragment)
  clear_element();
}

bool Fragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.Fragment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cyservice.MetaData metadata = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_node;
        break;
      }

      // optional .cyservice.Node node = 2;
      case 2: {
        if (tag == 18) {
         parse_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_edge;
        break;
      }

      // optional .cyservice.Edge edge = 3;
      case 3: {
        if (tag == 26) {
         parse_edge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_nodeAttribute;
        break;
      }

      // optional .cyservice.NodeAttribute nodeAttribute = 4;
      case 4: {
        if (tag == 34) {
         parse_nodeAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodeattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_edgeAttribute;
        break;
      }

      // optional .cyservice.EdgeAttribute edgeAttribute = 5;
      case 5: {
        if (tag == 42) {
         parse_edgeAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edgeattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_networkAttribute;
        break;
      }

      // optional .cyservice.NetworkAttribute networkAttribute = 6;
      case 6: {
        if (tag == 50) {
         parse_networkAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_networkattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_aspect;
        break;
      }

      // optional .cyservice.AnonymousAspect aspect = 7;
      case 7: {
        if (tag == 58) {
         parse_aspect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aspect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.Fragment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.Fragment)
  return false;
#undef DO_
}

void Fragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.Fragment)
  // optional .cyservice.MetaData metadata = 1;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *element_.metadata_, output);
  }

  // optional .cyservice.Node node = 2;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *element_.node_, output);
  }

  // optional .cyservice.Edge edge = 3;
  if (has_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *element_.edge_, output);
  }

  // optional .cyservice.NodeAttribute nodeAttribute = 4;
  if (has_nodeattribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *element_.nodeattribute_, output);
  }

  // optional .cyservice.EdgeAttribute edgeAttribute = 5;
  if (has_edgeattribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *element_.edgeattribute_, output);
  }

  // optional .cyservice.NetworkAttribute networkAttribute = 6;
  if (has_networkattribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *element_.networkattribute_, output);
  }

  // optional .cyservice.AnonymousAspect aspect = 7;
  if (has_aspect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *element_.aspect_, output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.Fragment)
}

::google::protobuf::uint8* Fragment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.Fragment)
  // optional .cyservice.MetaData metadata = 1;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *element_.metadata_, false, target);
  }

  // optional .cyservice.Node node = 2;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *element_.node_, false, target);
  }

  // optional .cyservice.Edge edge = 3;
  if (has_edge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *element_.edge_, false, target);
  }

  // optional .cyservice.NodeAttribute nodeAttribute = 4;
  if (has_nodeattribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *element_.nodeattribute_, false, target);
  }

  // optional .cyservice.EdgeAttribute edgeAttribute = 5;
  if (has_edgeattribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *element_.edgeattribute_, false, target);
  }

  // optional .cyservice.NetworkAttribute networkAttribute = 6;
  if (has_networkattribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *element_.networkattribute_, false, target);
  }

  // optional .cyservice.AnonymousAspect aspect = 7;
  if (has_aspect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *element_.aspect_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.Fragment)
  return target;
}

int Fragment::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.Fragment)
  int total_size = 0;

  switch (element_case()) {
    // optional .cyservice.MetaData metadata = 1;
    case kMetadata: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.metadata_);
      break;
    }
    // optional .cyservice.Node node = 2;
    case kNode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.node_);
      break;
    }
    // optional .cyservice.Edge edge = 3;
    case kEdge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.edge_);
      break;
    }
    // optional .cyservice.NodeAttribute nodeAttribute = 4;
    case kNodeAttribute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.nodeattribute_);
      break;
    }
    // optional .cyservice.EdgeAttribute edgeAttribute = 5;
    case kEdgeAttribute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.edgeattribute_);
      break;
    }
    // optional .cyservice.NetworkAttribute networkAttribute = 6;
    case kNetworkAttribute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.networkattribute_);
      break;
    }
    // optional .cyservice.AnonymousAspect aspect = 7;
    case kAspect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *element_.aspect_);
      break;
    }
    case ELEMENT_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Fragment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.Fragment)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Fragment* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Fragment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.Fragment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.Fragment)
    MergeFrom(*source);
  }
}

void Fragment::MergeFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.Fragment)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.element_case()) {
    case kMetadata: {
      mutable_metadata()->::cyservice::MetaData::MergeFrom(from.metadata());
      break;
    }
    case kNode: {
      mutable_node()->::cyservice::Node::MergeFrom(from.node());
      break;
    }
    case kEdge: {
      mutable_edge()->::cyservice::Edge::MergeFrom(from.edge());
      break;
    }
    case kNodeAttribute: {
      mutable_nodeattribute()->::cyservice::NodeAttribute::MergeFrom(from.nodeattribute());
      break;
    }
    case kEdgeAttribute: {
      mutable_edgeattribute()->::cyservice::EdgeAttribute::MergeFrom(from.edgeattribute());
      break;
    }
    case kNetworkAttribute: {
      mutable_networkattribute()->::cyservice::NetworkAttribute::MergeFrom(from.networkattribute());
      break;
    }
    case kAspect: {
      mutable_aspect()->::cyservice::AnonymousAspect::MergeFrom(from.aspect());
      break;
    }
    case ELEMENT_NOT_SET: {
      break;
    }
  }
}

void Fragment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.Fragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fragment::CopyFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.Fragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fragment::IsInitialized() const {

  return true;
}

void Fragment::Swap(Fragment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fragment::InternalSwap(Fragment* other) {
  std::swap(element_, other->element_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Fragment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Fragment_descriptor_;
  metadata.reflection = Fragment_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Fragment

// optional .cyservice.MetaData metadata = 1;
bool Fragment::has_metadata() const {
  return element_case() == kMetadata;
}
void Fragment::set_has_metadata() {
  _oneof_case_[0] = kMetadata;
}
void Fragment::clear_metadata() {
  if (has_metadata()) {
    delete element_.metadata_;
    clear_has_element();
  }
}
 const ::cyservice::MetaData& Fragment::metadata() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.metadata)
  return has_metadata()
      ? *element_.metadata_
      : ::cyservice::MetaData::default_instance();
}
::cyservice::MetaData* Fragment::mutable_metadata() {
  if (!has_metadata()) {
    clear_element();
    set_has_metadata();
    element_.metadata_ = new ::cyservice::MetaData;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.metadata)
  return element_.metadata_;
}
::cyservice::MetaData* Fragment::release_metadata() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.metadata)
  if (has_metadata()) {
    clear_has_element();
    ::cyservice::MetaData* temp = element_.metadata_;
    element_.metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_metadata(::cyservice::MetaData* metadata) {
  clear_element();
  if (metadata) {
    set_has_metadata();
    element_.metadata_ = metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.metadata)
}

// optional .cyservice.Node node = 2;
bool Fragment::has_node() const {
  return element_case() == kNode;
}
void Fragment::set_has_node() {
  _oneof_case_[0] = kNode;
}
void Fragment::clear_node() {
  if (has_node()) {
    delete element_.node_;
    clear_has_element();
  }
}
 const ::cyservice::Node& Fragment::node() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.node)
  return has_node()
      ? *element_.node_
      : ::cyservice::Node::default_instance();
}
::cyservice::Node* Fragment::mutable_node() {
  if (!has_node()) {
    clear_element();
    set_has_node();
    element_.node_ = new ::cyservice::Node;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.node)
  return element_.node_;
}
::cyservice::Node* Fragment::release_node() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.node)
  if (has_node()) {
    clear_has_element();
    ::cyservice::Node* temp = element_.node_;
    element_.node_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_node(::cyservice::Node* node) {
  clear_element();
  if (node) {
    set_has_node();
    element_.node_ = node;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.node)
}

// optional .cyservice.Edge edge = 3;
bool Fragment::has_edge() const {
  return element_case() == kEdge;
}
void Fragment::set_has_edge() {
  _oneof_case_[0] = kEdge;
}
void Fragment::clear_edge() {
  if (has_edge()) {
    delete element_.edge_;
    clear_has_element();
  }
}
 const ::cyservice::Edge& Fragment::edge() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.edge)
  return has_edge()
      ? *element_.edge_
      : ::cyservice::Edge::default_instance();
}
::cyservice::Edge* Fragment::mutable_edge() {
  if (!has_edge()) {
    clear_element();
    set_has_edge();
    element_.edge_ = new ::cyservice::Edge;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.edge)
  return element_.edge_;
}
::cyservice::Edge* Fragment::release_edge() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.edge)
  if (has_edge()) {
    clear_has_element();
    ::cyservice::Edge* temp = element_.edge_;
    element_.edge_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_edge(::cyservice::Edge* edge) {
  clear_element();
  if (edge) {
    set_has_edge();
    element_.edge_ = edge;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.edge)
}

// optional .cyservice.NodeAttribute nodeAttribute = 4;
bool Fragment::has_nodeattribute() const {
  return element_case() == kNodeAttribute;
}
void Fragment::set_has_nodeattribute() {
  _oneof_case_[0] = kNodeAttribute;
}
void Fragment::clear_nodeattribute() {
  if (has_nodeattribute()) {
    delete element_.nodeattribute_;
    clear_has_element();
  }
}
 const ::cyservice::NodeAttribute& Fragment::nodeattribute() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.nodeAttribute)
  return has_nodeattribute()
      ? *element_.nodeattribute_
      : ::cyservice::NodeAttribute::default_instance();
}
::cyservice::NodeAttribute* Fragment::mutable_nodeattribute() {
  if (!has_nodeattribute()) {
    clear_element();
    set_has_nodeattribute();
    element_.nodeattribute_ = new ::cyservice::NodeAttribute;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.nodeAttribute)
  return element_.nodeattribute_;
}
::cyservice::NodeAttribute* Fragment::release_nodeattribute() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.nodeAttribute)
  if (has_nodeattribute()) {
    clear_has_element();
    ::cyservice::NodeAttribute* temp = element_.nodeattribute_;
    element_.nodeattribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_nodeattribute(::cyservice::NodeAttribute* nodeattribute) {
  clear_element();
  if (nodeattribute) {
    set_has_nodeattribute();
    element_.nodeattribute_ = nodeattribute;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.nodeAttribute)
}

// optional .cyservice.EdgeAttribute edgeAttribute = 5;
bool Fragment::has_edgeattribute() const {
  return element_case() == kEdgeAttribute;
}
void Fragment::set_has_edgeattribute() {
  _oneof_case_[0] = kEdgeAttribute;
}
void Fragment::clear_edgeattribute() {
  if (has_edgeattribute()) {
    delete element_.edgeattribute_;
    clear_has_element();
  }
}
 const ::cyservice::EdgeAttribute& Fragment::edgeattribute() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.edgeAttribute)
  return has_edgeattribute()
      ? *element_.edgeattribute_
      : ::cyservice::EdgeAttribute::default_instance();
}
::cyservice::EdgeAttribute* Fragment::mutable_edgeattribute() {
  if (!has_edgeattribute()) {
    clear_element();
    set_has_edgeattribute();
    element_.edgeattribute_ = new ::cyservice::EdgeAttribute;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.edgeAttribute)
  return element_.edgeattribute_;
}
::cyservice::EdgeAttribute* Fragment::release_edgeattribute() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.edgeAttribute)
  if (has_edgeattribute()) {
    clear_has_element();
    ::cyservice::EdgeAttribute* temp = element_.edgeattribute_;
    element_.edgeattribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_edgeattribute(::cyservice::EdgeAttribute* edgeattribute) {
  clear_element();
  if (edgeattribute) {
    set_has_edgeattribute();
    element_.edgeattribute_ = edgeattribute;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.edgeAttribute)
}

// optional .cyservice.NetworkAttribute networkAttribute = 6;
bool Fragment::has_networkattribute() const {
  return element_case() == kNetworkAttribute;
}
void Fragment::set_has_networkattribute() {
  _oneof_case_[0] = kNetworkAttribute;
}
void Fragment::clear_networkattribute() {
  if (has_networkattribute()) {
    delete element_.networkattribute_;
    clear_has_element();
  }
}
 const ::cyservice::NetworkAttribute& Fragment::networkattribute() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.networkAttribute)
  return has_networkattribute()
      ? *element_.networkattribute_
      : ::cyservice::NetworkAttribute::default_instance();
}
::cyservice::NetworkAttribute* Fragment::mutable_networkattribute() {
  if (!has_networkattribute()) {
    clear_element();
    set_has_networkattribute();
    element_.networkattribute_ = new ::cyservice::NetworkAttribute;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.networkAttribute)
  return element_.networkattribute_;
}
::cyservice::NetworkAttribute* Fragment::release_networkattribute() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.networkAttribute)
  if (has_networkattribute()) {
    clear_has_element();
    ::cyservice::NetworkAttribute* temp = element_.networkattribute_;
    element_.networkattribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_networkattribute(::cyservice::NetworkAttribute* networkattribute) {
  clear_element();
  if (networkattribute) {
    set_has_networkattribute();
    element_.networkattribute_ = networkattribute;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.networkAttribute)
}

// optional .cyservice.AnonymousAspect aspect = 7;
bool Fragment::has_aspect() const {
  return element_case() == kAspect;
}
void Fragment::set_has_aspect() {
  _oneof_case_[0] = kAspect;
}
void Fragment::clear_aspect() {
  if (has_aspect()) {
    delete element_.aspect_;
    clear_has_element();
  }
}
 const ::cyservice::AnonymousAspect& Fragment::aspect() const {
  // @@protoc_insertion_point(field_get:cyservice.Fragment.aspect)
  return has_aspect()
      ? *element_.aspect_
      : ::cyservice::AnonymousAspect::default_instance();
}
::cyservice::AnonymousAspect* Fragment::mutable_aspect() {
  if (!has_aspect()) {
    clear_element();
    set_has_aspect();
    element_.aspect_ = new ::cyservice::AnonymousAspect;
  }
  // @@protoc_insertion_point(field_mutable:cyservice.Fragment.aspect)
  return element_.aspect_;
}
::cyservice::AnonymousAspect* Fragment::release_aspect() {
  // @@protoc_insertion_point(field_release:cyservice.Fragment.aspect)
  if (has_aspect()) {
    clear_has_element();
    ::cyservice::AnonymousAspect* temp = element_.aspect_;
    element_.aspect_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Fragment::set_allocated_aspect(::cyservice::AnonymousAspect* aspect) {
  clear_element();
  if (aspect) {
    set_has_aspect();
    element_.aspect_ = aspect;
  }
  // @@protoc_insertion_point(field_set_allocated:cyservice.Fragment.aspect)
}

bool Fragment::has_element() const {
  return element_case() != ELEMENT_NOT_SET;
}
void Fragment::clear_has_element() {
  _oneof_case_[0] = ELEMENT_NOT_SET;
}
Fragment::ElementCase Fragment::element_case() const {
  return Fragment::ElementCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaData::kNameFieldNumber;
const int MetaData::kVersionFieldNumber;
const int MetaData::kIdCounterFieldNumber;
const int MetaData::kElementCountFieldNumber;
const int MetaData::kConsistencyGroupFieldNumber;
const int MetaData::kChecksumFieldNumber;
const int MetaData::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaData::MetaData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.MetaData)
}

void MetaData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MetaData::MetaData(const MetaData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.MetaData)
}

void MetaData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idcounter_ = GOOGLE_LONGLONG(0);
  elementcount_ = GOOGLE_LONGLONG(0);
  consistencygroup_ = GOOGLE_LONGLONG(0);
  checksum_ = GOOGLE_LONGLONG(0);
}

MetaData::~MetaData() {
  // @@protoc_insertion_point(destructor:cyservice.MetaData)
  SharedDtor();
}

void MetaData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MetaData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetaData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetaData_descriptor_;
}

const MetaData& MetaData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

MetaData* MetaData::default_instance_ = NULL;

MetaData* MetaData::New(::google::protobuf::Arena* arena) const {
  MetaData* n = new MetaData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.MetaData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MetaData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MetaData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idcounter_, checksum_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  properties_.Clear();
}

bool MetaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.MetaData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.MetaData.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.MetaData.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_idCounter;
        break;
      }

      // optional int64 idCounter = 3;
      case 3: {
        if (tag == 24) {
         parse_idCounter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &idcounter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_elementCount;
        break;
      }

      // optional int64 elementCount = 4;
      case 4: {
        if (tag == 32) {
         parse_elementCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &elementcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_consistencyGroup;
        break;
      }

      // optional int64 consistencyGroup = 5;
      case 5: {
        if (tag == 40) {
         parse_consistencyGroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &consistencygroup_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_checksum;
        break;
      }

      // optional int64 checksum = 6;
      case 6: {
        if (tag == 48) {
         parse_checksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &checksum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_properties;
        break;
      }

      // repeated .cyservice.KeyValue properties = 7;
      case 7: {
        if (tag == 58) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.MetaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.MetaData)
  return false;
#undef DO_
}

void MetaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.MetaData)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.MetaData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.MetaData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional int64 idCounter = 3;
  if (this->idcounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->idcounter(), output);
  }

  // optional int64 elementCount = 4;
  if (this->elementcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->elementcount(), output);
  }

  // optional int64 consistencyGroup = 5;
  if (this->consistencygroup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->consistencygroup(), output);
  }

  // optional int64 checksum = 6;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->checksum(), output);
  }

  // repeated .cyservice.KeyValue properties = 7;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.MetaData)
}

::google::protobuf::uint8* MetaData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.MetaData)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.MetaData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.MetaData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional int64 idCounter = 3;
  if (this->idcounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->idcounter(), target);
  }

  // optional int64 elementCount = 4;
  if (this->elementcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->elementcount(), target);
  }

  // optional int64 consistencyGroup = 5;
  if (this->consistencygroup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->consistencygroup(), target);
  }

  // optional int64 checksum = 6;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->checksum(), target);
  }

  // repeated .cyservice.KeyValue properties = 7;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->properties(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.MetaData)
  return target;
}

int MetaData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.MetaData)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional int64 idCounter = 3;
  if (this->idcounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->idcounter());
  }

  // optional int64 elementCount = 4;
  if (this->elementcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->elementcount());
  }

  // optional int64 consistencyGroup = 5;
  if (this->consistencygroup() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->consistencygroup());
  }

  // optional int64 checksum = 6;
  if (this->checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->checksum());
  }

  // repeated .cyservice.KeyValue properties = 7;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.MetaData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MetaData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MetaData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.MetaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.MetaData)
    MergeFrom(*source);
  }
}

void MetaData::MergeFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.MetaData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  properties_.MergeFrom(from.properties_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.idcounter() != 0) {
    set_idcounter(from.idcounter());
  }
  if (from.elementcount() != 0) {
    set_elementcount(from.elementcount());
  }
  if (from.consistencygroup() != 0) {
    set_consistencygroup(from.consistencygroup());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
}

void MetaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaData::CopyFrom(const MetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.MetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaData::IsInitialized() const {

  return true;
}

void MetaData::Swap(MetaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaData::InternalSwap(MetaData* other) {
  name_.Swap(&other->name_);
  version_.Swap(&other->version_);
  std::swap(idcounter_, other->idcounter_);
  std::swap(elementcount_, other->elementcount_);
  std::swap(consistencygroup_, other->consistencygroup_);
  std::swap(checksum_, other->checksum_);
  properties_.UnsafeArenaSwap(&other->properties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetaData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetaData_descriptor_;
  metadata.reflection = MetaData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetaData

// optional string name = 1;
void MetaData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MetaData::name() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.MetaData.name)
}
 void MetaData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.MetaData.name)
}
 void MetaData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.MetaData.name)
}
 ::std::string* MetaData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.MetaData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MetaData::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.MetaData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.MetaData.name)
}

// optional string version = 2;
void MetaData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MetaData::version() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaData::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.MetaData.version)
}
 void MetaData::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.MetaData.version)
}
 void MetaData::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.MetaData.version)
}
 ::std::string* MetaData::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.MetaData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MetaData::release_version() {
  // @@protoc_insertion_point(field_release:cyservice.MetaData.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:cyservice.MetaData.version)
}

// optional int64 idCounter = 3;
void MetaData::clear_idcounter() {
  idcounter_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MetaData::idcounter() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.idCounter)
  return idcounter_;
}
 void MetaData::set_idcounter(::google::protobuf::int64 value) {
  
  idcounter_ = value;
  // @@protoc_insertion_point(field_set:cyservice.MetaData.idCounter)
}

// optional int64 elementCount = 4;
void MetaData::clear_elementcount() {
  elementcount_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MetaData::elementcount() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.elementCount)
  return elementcount_;
}
 void MetaData::set_elementcount(::google::protobuf::int64 value) {
  
  elementcount_ = value;
  // @@protoc_insertion_point(field_set:cyservice.MetaData.elementCount)
}

// optional int64 consistencyGroup = 5;
void MetaData::clear_consistencygroup() {
  consistencygroup_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MetaData::consistencygroup() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.consistencyGroup)
  return consistencygroup_;
}
 void MetaData::set_consistencygroup(::google::protobuf::int64 value) {
  
  consistencygroup_ = value;
  // @@protoc_insertion_point(field_set:cyservice.MetaData.consistencyGroup)
}

// optional int64 checksum = 6;
void MetaData::clear_checksum() {
  checksum_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MetaData::checksum() const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.checksum)
  return checksum_;
}
 void MetaData::set_checksum(::google::protobuf::int64 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:cyservice.MetaData.checksum)
}

// repeated .cyservice.KeyValue properties = 7;
int MetaData::properties_size() const {
  return properties_.size();
}
void MetaData::clear_properties() {
  properties_.Clear();
}
const ::cyservice::KeyValue& MetaData::properties(int index) const {
  // @@protoc_insertion_point(field_get:cyservice.MetaData.properties)
  return properties_.Get(index);
}
::cyservice::KeyValue* MetaData::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:cyservice.MetaData.properties)
  return properties_.Mutable(index);
}
::cyservice::KeyValue* MetaData::add_properties() {
  // @@protoc_insertion_point(field_add:cyservice.MetaData.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::cyservice::KeyValue >*
MetaData::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:cyservice.MetaData.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::cyservice::KeyValue >&
MetaData::properties() const {
  // @@protoc_insertion_point(field_list:cyservice.MetaData.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue::kNameFieldNumber;
const int KeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue::KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.KeyValue)
}

void KeyValue::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KeyValue::KeyValue(const KeyValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.KeyValue)
}

void KeyValue::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:cyservice.KeyValue)
  SharedDtor();
}

void KeyValue::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyValue_descriptor_;
}

const KeyValue& KeyValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

KeyValue* KeyValue::default_instance_ = NULL;

KeyValue* KeyValue::New(::google::protobuf::Arena* arena) const {
  KeyValue* n = new KeyValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.KeyValue)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.KeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.KeyValue.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.KeyValue.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.KeyValue)
  return false;
#undef DO_
}

void KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.KeyValue)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.KeyValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.KeyValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.KeyValue)
}

::google::protobuf::uint8* KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.KeyValue)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.KeyValue.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.KeyValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.KeyValue)
  return target;
}

int KeyValue::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.KeyValue)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.KeyValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KeyValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.KeyValue)
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.KeyValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {

  return true;
}

void KeyValue::Swap(KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue::InternalSwap(KeyValue* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyValue_descriptor_;
  metadata.reflection = KeyValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValue

// optional string name = 1;
void KeyValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeyValue::name() const {
  // @@protoc_insertion_point(field_get:cyservice.KeyValue.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValue::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.KeyValue.name)
}
 void KeyValue::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.KeyValue.name)
}
 void KeyValue::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.KeyValue.name)
}
 ::std::string* KeyValue::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.KeyValue.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeyValue::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.KeyValue.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.KeyValue.name)
}

// optional string value = 2;
void KeyValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeyValue::value() const {
  // @@protoc_insertion_point(field_get:cyservice.KeyValue.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.KeyValue.value)
}
 void KeyValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.KeyValue.value)
}
 void KeyValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.KeyValue.value)
}
 ::std::string* KeyValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.KeyValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeyValue::release_value() {
  // @@protoc_insertion_point(field_release:cyservice.KeyValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cyservice.KeyValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kNameFieldNumber;
const int Node::kRepresentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.Node)
}

void Node::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Node::Node(const Node& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.Node)
}

void Node::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  represents_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:cyservice.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  represents_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Node_descriptor_;
}

const Node& Node::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

Node* Node::default_instance_ = NULL;

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.Node)
  id_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  represents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.Node.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_represents;
        break;
      }

      // optional string represents = 3;
      case 3: {
        if (tag == 26) {
         parse_represents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_represents()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->represents().data(), this->represents().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.Node.represents"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.Node)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Node.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string represents = 3;
  if (this->represents().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->represents().data(), this->represents().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Node.represents");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->represents(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.Node)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Node.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string represents = 3;
  if (this->represents().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->represents().data(), this->represents().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Node.represents");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->represents(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.Node)
  return target;
}

int Node::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.Node)
  int total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string represents = 3;
  if (this->represents().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->represents());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.Node)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Node* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.Node)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.represents().size() > 0) {

    represents_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.represents_);
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {

  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  represents_.Swap(&other->represents_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Node_descriptor_;
  metadata.reflection = Node_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// optional int64 id = 1;
void Node::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Node::id() const {
  // @@protoc_insertion_point(field_get:cyservice.Node.id)
  return id_;
}
 void Node::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:cyservice.Node.id)
}

// optional string name = 2;
void Node::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Node::name() const {
  // @@protoc_insertion_point(field_get:cyservice.Node.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Node::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.Node.name)
}
 void Node::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.Node.name)
}
 void Node::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.Node.name)
}
 ::std::string* Node::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.Node.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Node::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.Node.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Node::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.Node.name)
}

// optional string represents = 3;
void Node::clear_represents() {
  represents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Node::represents() const {
  // @@protoc_insertion_point(field_get:cyservice.Node.represents)
  return represents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Node::set_represents(const ::std::string& value) {
  
  represents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.Node.represents)
}
 void Node::set_represents(const char* value) {
  
  represents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.Node.represents)
}
 void Node::set_represents(const char* value, size_t size) {
  
  represents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.Node.represents)
}
 ::std::string* Node::mutable_represents() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.Node.represents)
  return represents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Node::release_represents() {
  // @@protoc_insertion_point(field_release:cyservice.Node.represents)
  
  return represents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Node::set_allocated_represents(::std::string* represents) {
  if (represents != NULL) {
    
  } else {
    
  }
  represents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), represents);
  // @@protoc_insertion_point(field_set_allocated:cyservice.Node.represents)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edge::kIdFieldNumber;
const int Edge::kSourceIdFieldNumber;
const int Edge::kTargetIdFieldNumber;
const int Edge::kInteractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edge::Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.Edge)
}

void Edge::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Edge::Edge(const Edge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.Edge)
}

void Edge::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  sourceid_ = GOOGLE_LONGLONG(0);
  targetid_ = GOOGLE_LONGLONG(0);
  interaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:cyservice.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
  interaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Edge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edge_descriptor_;
}

const Edge& Edge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

Edge* Edge::default_instance_ = NULL;

Edge* Edge::New(::google::protobuf::Arena* arena) const {
  Edge* n = new Edge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.Edge)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Edge, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Edge*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, targetid_);
  interaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.Edge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sourceId;
        break;
      }

      // optional int64 sourceId = 2;
      case 2: {
        if (tag == 16) {
         parse_sourceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sourceid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_targetId;
        break;
      }

      // optional int64 targetId = 3;
      case 3: {
        if (tag == 24) {
         parse_targetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &targetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_interaction;
        break;
      }

      // optional string interaction = 4;
      case 4: {
        if (tag == 34) {
         parse_interaction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interaction().data(), this->interaction().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.Edge.interaction"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.Edge)
  return false;
#undef DO_
}

void Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.Edge)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int64 sourceId = 2;
  if (this->sourceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sourceid(), output);
  }

  // optional int64 targetId = 3;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->targetid(), output);
  }

  // optional string interaction = 4;
  if (this->interaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interaction().data(), this->interaction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Edge.interaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->interaction(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.Edge)
}

::google::protobuf::uint8* Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.Edge)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int64 sourceId = 2;
  if (this->sourceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sourceid(), target);
  }

  // optional int64 targetId = 3;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->targetid(), target);
  }

  // optional string interaction = 4;
  if (this->interaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interaction().data(), this->interaction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.Edge.interaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->interaction(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.Edge)
  return target;
}

int Edge::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.Edge)
  int total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional int64 sourceId = 2;
  if (this->sourceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sourceid());
  }

  // optional int64 targetId = 3;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->targetid());
  }

  // optional string interaction = 4;
  if (this->interaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interaction());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Edge* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sourceid() != 0) {
    set_sourceid(from.sourceid());
  }
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.interaction().size() > 0) {

    interaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interaction_);
  }
}

void Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {

  return true;
}

void Edge::Swap(Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edge::InternalSwap(Edge* other) {
  std::swap(id_, other->id_);
  std::swap(sourceid_, other->sourceid_);
  std::swap(targetid_, other->targetid_);
  interaction_.Swap(&other->interaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Edge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edge_descriptor_;
  metadata.reflection = Edge_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Edge

// optional int64 id = 1;
void Edge::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Edge::id() const {
  // @@protoc_insertion_point(field_get:cyservice.Edge.id)
  return id_;
}
 void Edge::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:cyservice.Edge.id)
}

// optional int64 sourceId = 2;
void Edge::clear_sourceid() {
  sourceid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Edge::sourceid() const {
  // @@protoc_insertion_point(field_get:cyservice.Edge.sourceId)
  return sourceid_;
}
 void Edge::set_sourceid(::google::protobuf::int64 value) {
  
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.Edge.sourceId)
}

// optional int64 targetId = 3;
void Edge::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Edge::targetid() const {
  // @@protoc_insertion_point(field_get:cyservice.Edge.targetId)
  return targetid_;
}
 void Edge::set_targetid(::google::protobuf::int64 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.Edge.targetId)
}

// optional string interaction = 4;
void Edge::clear_interaction() {
  interaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edge::interaction() const {
  // @@protoc_insertion_point(field_get:cyservice.Edge.interaction)
  return interaction_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edge::set_interaction(const ::std::string& value) {
  
  interaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.Edge.interaction)
}
 void Edge::set_interaction(const char* value) {
  
  interaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.Edge.interaction)
}
 void Edge::set_interaction(const char* value, size_t size) {
  
  interaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.Edge.interaction)
}
 ::std::string* Edge::mutable_interaction() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.Edge.interaction)
  return interaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edge::release_interaction() {
  // @@protoc_insertion_point(field_release:cyservice.Edge.interaction)
  
  return interaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edge::set_allocated_interaction(::std::string* interaction) {
  if (interaction != NULL) {
    
  } else {
    
  }
  interaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interaction);
  // @@protoc_insertion_point(field_set_allocated:cyservice.Edge.interaction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeAttribute::kNodeIdFieldNumber;
const int NodeAttribute::kNameFieldNumber;
const int NodeAttribute::kValueFieldNumber;
const int NodeAttribute::kTypeFieldNumber;
const int NodeAttribute::kSubnetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeAttribute::NodeAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.NodeAttribute)
}

void NodeAttribute::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NodeAttribute::NodeAttribute(const NodeAttribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.NodeAttribute)
}

void NodeAttribute::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodeid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

NodeAttribute::~NodeAttribute() {
  // @@protoc_insertion_point(destructor:cyservice.NodeAttribute)
  SharedDtor();
}

void NodeAttribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NodeAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeAttribute_descriptor_;
}

const NodeAttribute& NodeAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

NodeAttribute* NodeAttribute::default_instance_ = NULL;

NodeAttribute* NodeAttribute::New(::google::protobuf::Arena* arena) const {
  NodeAttribute* n = new NodeAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.NodeAttribute)
  nodeid_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

bool NodeAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.NodeAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 nodeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nodeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NodeAttribute.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NodeAttribute.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // optional string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NodeAttribute.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_subnetId;
        break;
      }

      // optional int64 subnetId = 5;
      case 5: {
        if (tag == 40) {
         parse_subnetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &subnetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.NodeAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.NodeAttribute)
  return false;
#undef DO_
}

void NodeAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.NodeAttribute)
  // optional int64 nodeId = 1;
  if (this->nodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nodeid(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->subnetid(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.NodeAttribute)
}

::google::protobuf::uint8* NodeAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.NodeAttribute)
  // optional int64 nodeId = 1;
  if (this->nodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nodeid(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NodeAttribute.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->subnetid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.NodeAttribute)
  return target;
}

int NodeAttribute::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.NodeAttribute)
  int total_size = 0;

  // optional int64 nodeId = 1;
  if (this->nodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nodeid());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->subnetid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.NodeAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NodeAttribute* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.NodeAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.NodeAttribute)
    MergeFrom(*source);
  }
}

void NodeAttribute::MergeFrom(const NodeAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.NodeAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.nodeid() != 0) {
    set_nodeid(from.nodeid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.subnetid() != 0) {
    set_subnetid(from.subnetid());
  }
}

void NodeAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.NodeAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeAttribute::CopyFrom(const NodeAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.NodeAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeAttribute::IsInitialized() const {

  return true;
}

void NodeAttribute::Swap(NodeAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeAttribute::InternalSwap(NodeAttribute* other) {
  std::swap(nodeid_, other->nodeid_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  type_.Swap(&other->type_);
  std::swap(subnetid_, other->subnetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeAttribute_descriptor_;
  metadata.reflection = NodeAttribute_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeAttribute

// optional int64 nodeId = 1;
void NodeAttribute::clear_nodeid() {
  nodeid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 NodeAttribute::nodeid() const {
  // @@protoc_insertion_point(field_get:cyservice.NodeAttribute.nodeId)
  return nodeid_;
}
 void NodeAttribute::set_nodeid(::google::protobuf::int64 value) {
  
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.NodeAttribute.nodeId)
}

// optional string name = 2;
void NodeAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NodeAttribute::name() const {
  // @@protoc_insertion_point(field_get:cyservice.NodeAttribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NodeAttribute.name)
}
 void NodeAttribute::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NodeAttribute.name)
}
 void NodeAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NodeAttribute.name)
}
 ::std::string* NodeAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NodeAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NodeAttribute::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.NodeAttribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NodeAttribute.name)
}

// optional string value = 3;
void NodeAttribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NodeAttribute::value() const {
  // @@protoc_insertion_point(field_get:cyservice.NodeAttribute.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NodeAttribute.value)
}
 void NodeAttribute::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NodeAttribute.value)
}
 void NodeAttribute::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NodeAttribute.value)
}
 ::std::string* NodeAttribute::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NodeAttribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NodeAttribute::release_value() {
  // @@protoc_insertion_point(field_release:cyservice.NodeAttribute.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NodeAttribute.value)
}

// optional string type = 4;
void NodeAttribute::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NodeAttribute::type() const {
  // @@protoc_insertion_point(field_get:cyservice.NodeAttribute.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NodeAttribute.type)
}
 void NodeAttribute::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NodeAttribute.type)
}
 void NodeAttribute::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NodeAttribute.type)
}
 ::std::string* NodeAttribute::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NodeAttribute.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NodeAttribute::release_type() {
  // @@protoc_insertion_point(field_release:cyservice.NodeAttribute.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NodeAttribute::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NodeAttribute.type)
}

// optional int64 subnetId = 5;
void NodeAttribute::clear_subnetid() {
  subnetid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 NodeAttribute::subnetid() const {
  // @@protoc_insertion_point(field_get:cyservice.NodeAttribute.subnetId)
  return subnetid_;
}
 void NodeAttribute::set_subnetid(::google::protobuf::int64 value) {
  
  subnetid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.NodeAttribute.subnetId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeAttribute::kEdgeIdFieldNumber;
const int EdgeAttribute::kNameFieldNumber;
const int EdgeAttribute::kValueFieldNumber;
const int EdgeAttribute::kTypeFieldNumber;
const int EdgeAttribute::kSubnetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeAttribute::EdgeAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.EdgeAttribute)
}

void EdgeAttribute::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EdgeAttribute::EdgeAttribute(const EdgeAttribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.EdgeAttribute)
}

void EdgeAttribute::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  edgeid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

EdgeAttribute::~EdgeAttribute() {
  // @@protoc_insertion_point(destructor:cyservice.EdgeAttribute)
  SharedDtor();
}

void EdgeAttribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EdgeAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EdgeAttribute_descriptor_;
}

const EdgeAttribute& EdgeAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

EdgeAttribute* EdgeAttribute::default_instance_ = NULL;

EdgeAttribute* EdgeAttribute::New(::google::protobuf::Arena* arena) const {
  EdgeAttribute* n = new EdgeAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EdgeAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.EdgeAttribute)
  edgeid_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

bool EdgeAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.EdgeAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 edgeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &edgeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.EdgeAttribute.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.EdgeAttribute.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // optional string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.EdgeAttribute.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_subnetId;
        break;
      }

      // optional int64 subnetId = 5;
      case 5: {
        if (tag == 40) {
         parse_subnetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &subnetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.EdgeAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.EdgeAttribute)
  return false;
#undef DO_
}

void EdgeAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.EdgeAttribute)
  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->edgeid(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->subnetid(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.EdgeAttribute)
}

::google::protobuf::uint8* EdgeAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.EdgeAttribute)
  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->edgeid(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.EdgeAttribute.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->subnetid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.EdgeAttribute)
  return target;
}

int EdgeAttribute::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.EdgeAttribute)
  int total_size = 0;

  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->edgeid());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->subnetid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.EdgeAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EdgeAttribute* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.EdgeAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.EdgeAttribute)
    MergeFrom(*source);
  }
}

void EdgeAttribute::MergeFrom(const EdgeAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.EdgeAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.edgeid() != 0) {
    set_edgeid(from.edgeid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.subnetid() != 0) {
    set_subnetid(from.subnetid());
  }
}

void EdgeAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.EdgeAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeAttribute::CopyFrom(const EdgeAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.EdgeAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeAttribute::IsInitialized() const {

  return true;
}

void EdgeAttribute::Swap(EdgeAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeAttribute::InternalSwap(EdgeAttribute* other) {
  std::swap(edgeid_, other->edgeid_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  type_.Swap(&other->type_);
  std::swap(subnetid_, other->subnetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EdgeAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EdgeAttribute_descriptor_;
  metadata.reflection = EdgeAttribute_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EdgeAttribute

// optional int64 edgeId = 1;
void EdgeAttribute::clear_edgeid() {
  edgeid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 EdgeAttribute::edgeid() const {
  // @@protoc_insertion_point(field_get:cyservice.EdgeAttribute.edgeId)
  return edgeid_;
}
 void EdgeAttribute::set_edgeid(::google::protobuf::int64 value) {
  
  edgeid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.EdgeAttribute.edgeId)
}

// optional string name = 2;
void EdgeAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EdgeAttribute::name() const {
  // @@protoc_insertion_point(field_get:cyservice.EdgeAttribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.EdgeAttribute.name)
}
 void EdgeAttribute::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.EdgeAttribute.name)
}
 void EdgeAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.EdgeAttribute.name)
}
 ::std::string* EdgeAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.EdgeAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EdgeAttribute::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.EdgeAttribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.EdgeAttribute.name)
}

// optional string value = 3;
void EdgeAttribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EdgeAttribute::value() const {
  // @@protoc_insertion_point(field_get:cyservice.EdgeAttribute.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.EdgeAttribute.value)
}
 void EdgeAttribute::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.EdgeAttribute.value)
}
 void EdgeAttribute::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.EdgeAttribute.value)
}
 ::std::string* EdgeAttribute::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.EdgeAttribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EdgeAttribute::release_value() {
  // @@protoc_insertion_point(field_release:cyservice.EdgeAttribute.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cyservice.EdgeAttribute.value)
}

// optional string type = 4;
void EdgeAttribute::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EdgeAttribute::type() const {
  // @@protoc_insertion_point(field_get:cyservice.EdgeAttribute.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.EdgeAttribute.type)
}
 void EdgeAttribute::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.EdgeAttribute.type)
}
 void EdgeAttribute::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.EdgeAttribute.type)
}
 ::std::string* EdgeAttribute::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.EdgeAttribute.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EdgeAttribute::release_type() {
  // @@protoc_insertion_point(field_release:cyservice.EdgeAttribute.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EdgeAttribute::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cyservice.EdgeAttribute.type)
}

// optional int64 subnetId = 5;
void EdgeAttribute::clear_subnetid() {
  subnetid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 EdgeAttribute::subnetid() const {
  // @@protoc_insertion_point(field_get:cyservice.EdgeAttribute.subnetId)
  return subnetid_;
}
 void EdgeAttribute::set_subnetid(::google::protobuf::int64 value) {
  
  subnetid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.EdgeAttribute.subnetId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkAttribute::kEdgeIdFieldNumber;
const int NetworkAttribute::kNameFieldNumber;
const int NetworkAttribute::kValueFieldNumber;
const int NetworkAttribute::kTypeFieldNumber;
const int NetworkAttribute::kSubnetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkAttribute::NetworkAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.NetworkAttribute)
}

void NetworkAttribute::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NetworkAttribute::NetworkAttribute(const NetworkAttribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.NetworkAttribute)
}

void NetworkAttribute::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  edgeid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

NetworkAttribute::~NetworkAttribute() {
  // @@protoc_insertion_point(destructor:cyservice.NetworkAttribute)
  SharedDtor();
}

void NetworkAttribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NetworkAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkAttribute_descriptor_;
}

const NetworkAttribute& NetworkAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

NetworkAttribute* NetworkAttribute::default_instance_ = NULL;

NetworkAttribute* NetworkAttribute::New(::google::protobuf::Arena* arena) const {
  NetworkAttribute* n = new NetworkAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.NetworkAttribute)
  edgeid_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetid_ = GOOGLE_LONGLONG(0);
}

bool NetworkAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.NetworkAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 edgeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &edgeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NetworkAttribute.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NetworkAttribute.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // optional string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.NetworkAttribute.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_subnetId;
        break;
      }

      // optional int64 subnetId = 5;
      case 5: {
        if (tag == 40) {
         parse_subnetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &subnetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.NetworkAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.NetworkAttribute)
  return false;
#undef DO_
}

void NetworkAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.NetworkAttribute)
  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->edgeid(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->subnetid(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.NetworkAttribute)
}

::google::protobuf::uint8* NetworkAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.NetworkAttribute)
  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->edgeid(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.NetworkAttribute.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->subnetid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.NetworkAttribute)
  return target;
}

int NetworkAttribute::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.NetworkAttribute)
  int total_size = 0;

  // optional int64 edgeId = 1;
  if (this->edgeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->edgeid());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional int64 subnetId = 5;
  if (this->subnetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->subnetid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.NetworkAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NetworkAttribute* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.NetworkAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.NetworkAttribute)
    MergeFrom(*source);
  }
}

void NetworkAttribute::MergeFrom(const NetworkAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.NetworkAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.edgeid() != 0) {
    set_edgeid(from.edgeid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.subnetid() != 0) {
    set_subnetid(from.subnetid());
  }
}

void NetworkAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.NetworkAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkAttribute::CopyFrom(const NetworkAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.NetworkAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkAttribute::IsInitialized() const {

  return true;
}

void NetworkAttribute::Swap(NetworkAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkAttribute::InternalSwap(NetworkAttribute* other) {
  std::swap(edgeid_, other->edgeid_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  type_.Swap(&other->type_);
  std::swap(subnetid_, other->subnetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkAttribute_descriptor_;
  metadata.reflection = NetworkAttribute_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkAttribute

// optional int64 edgeId = 1;
void NetworkAttribute::clear_edgeid() {
  edgeid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 NetworkAttribute::edgeid() const {
  // @@protoc_insertion_point(field_get:cyservice.NetworkAttribute.edgeId)
  return edgeid_;
}
 void NetworkAttribute::set_edgeid(::google::protobuf::int64 value) {
  
  edgeid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.NetworkAttribute.edgeId)
}

// optional string name = 2;
void NetworkAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkAttribute::name() const {
  // @@protoc_insertion_point(field_get:cyservice.NetworkAttribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NetworkAttribute.name)
}
 void NetworkAttribute::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NetworkAttribute.name)
}
 void NetworkAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NetworkAttribute.name)
}
 ::std::string* NetworkAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NetworkAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkAttribute::release_name() {
  // @@protoc_insertion_point(field_release:cyservice.NetworkAttribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NetworkAttribute.name)
}

// optional string value = 3;
void NetworkAttribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkAttribute::value() const {
  // @@protoc_insertion_point(field_get:cyservice.NetworkAttribute.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NetworkAttribute.value)
}
 void NetworkAttribute::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NetworkAttribute.value)
}
 void NetworkAttribute::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NetworkAttribute.value)
}
 ::std::string* NetworkAttribute::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NetworkAttribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkAttribute::release_value() {
  // @@protoc_insertion_point(field_release:cyservice.NetworkAttribute.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NetworkAttribute.value)
}

// optional string type = 4;
void NetworkAttribute::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkAttribute::type() const {
  // @@protoc_insertion_point(field_get:cyservice.NetworkAttribute.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.NetworkAttribute.type)
}
 void NetworkAttribute::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.NetworkAttribute.type)
}
 void NetworkAttribute::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.NetworkAttribute.type)
}
 ::std::string* NetworkAttribute::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.NetworkAttribute.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkAttribute::release_type() {
  // @@protoc_insertion_point(field_release:cyservice.NetworkAttribute.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkAttribute::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cyservice.NetworkAttribute.type)
}

// optional int64 subnetId = 5;
void NetworkAttribute::clear_subnetid() {
  subnetid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 NetworkAttribute::subnetid() const {
  // @@protoc_insertion_point(field_get:cyservice.NetworkAttribute.subnetId)
  return subnetid_;
}
 void NetworkAttribute::set_subnetid(::google::protobuf::int64 value) {
  
  subnetid_ = value;
  // @@protoc_insertion_point(field_set:cyservice.NetworkAttribute.subnetId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnonymousAspect::kTypeFieldNumber;
const int AnonymousAspect::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnonymousAspect::AnonymousAspect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cyservice.AnonymousAspect)
}

void AnonymousAspect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AnonymousAspect::AnonymousAspect(const AnonymousAspect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cyservice.AnonymousAspect)
}

void AnonymousAspect::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AnonymousAspect::~AnonymousAspect() {
  // @@protoc_insertion_point(destructor:cyservice.AnonymousAspect)
  SharedDtor();
}

void AnonymousAspect::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AnonymousAspect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnonymousAspect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnonymousAspect_descriptor_;
}

const AnonymousAspect& AnonymousAspect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cyservice_2eproto();
  return *default_instance_;
}

AnonymousAspect* AnonymousAspect::default_instance_ = NULL;

AnonymousAspect* AnonymousAspect::New(::google::protobuf::Arena* arena) const {
  AnonymousAspect* n = new AnonymousAspect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnonymousAspect::Clear() {
// @@protoc_insertion_point(message_clear_start:cyservice.AnonymousAspect)
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AnonymousAspect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cyservice.AnonymousAspect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cyservice.AnonymousAspect.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_element;
        break;
      }

      // optional bytes element = 2;
      case 2: {
        if (tag == 18) {
         parse_element:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_element()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cyservice.AnonymousAspect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cyservice.AnonymousAspect)
  return false;
#undef DO_
}

void AnonymousAspect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cyservice.AnonymousAspect)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.AnonymousAspect.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional bytes element = 2;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->element(), output);
  }

  // @@protoc_insertion_point(serialize_end:cyservice.AnonymousAspect)
}

::google::protobuf::uint8* AnonymousAspect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cyservice.AnonymousAspect)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cyservice.AnonymousAspect.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional bytes element = 2;
  if (this->element().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->element(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cyservice.AnonymousAspect)
  return target;
}

int AnonymousAspect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:cyservice.AnonymousAspect)
  int total_size = 0;

  // optional string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional bytes element = 2;
  if (this->element().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->element());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnonymousAspect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cyservice.AnonymousAspect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AnonymousAspect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AnonymousAspect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cyservice.AnonymousAspect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cyservice.AnonymousAspect)
    MergeFrom(*source);
  }
}

void AnonymousAspect::MergeFrom(const AnonymousAspect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cyservice.AnonymousAspect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.element().size() > 0) {

    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
}

void AnonymousAspect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cyservice.AnonymousAspect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnonymousAspect::CopyFrom(const AnonymousAspect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cyservice.AnonymousAspect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnonymousAspect::IsInitialized() const {

  return true;
}

void AnonymousAspect::Swap(AnonymousAspect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnonymousAspect::InternalSwap(AnonymousAspect* other) {
  type_.Swap(&other->type_);
  element_.Swap(&other->element_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnonymousAspect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnonymousAspect_descriptor_;
  metadata.reflection = AnonymousAspect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnonymousAspect

// optional string type = 1;
void AnonymousAspect::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AnonymousAspect::type() const {
  // @@protoc_insertion_point(field_get:cyservice.AnonymousAspect.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AnonymousAspect::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.AnonymousAspect.type)
}
 void AnonymousAspect::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.AnonymousAspect.type)
}
 void AnonymousAspect::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.AnonymousAspect.type)
}
 ::std::string* AnonymousAspect::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.AnonymousAspect.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AnonymousAspect::release_type() {
  // @@protoc_insertion_point(field_release:cyservice.AnonymousAspect.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AnonymousAspect::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cyservice.AnonymousAspect.type)
}

// optional bytes element = 2;
void AnonymousAspect::clear_element() {
  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AnonymousAspect::element() const {
  // @@protoc_insertion_point(field_get:cyservice.AnonymousAspect.element)
  return element_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AnonymousAspect::set_element(const ::std::string& value) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyservice.AnonymousAspect.element)
}
 void AnonymousAspect::set_element(const char* value) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyservice.AnonymousAspect.element)
}
 void AnonymousAspect::set_element(const void* value, size_t size) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyservice.AnonymousAspect.element)
}
 ::std::string* AnonymousAspect::mutable_element() {
  
  // @@protoc_insertion_point(field_mutable:cyservice.AnonymousAspect.element)
  return element_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AnonymousAspect::release_element() {
  // @@protoc_insertion_point(field_release:cyservice.AnonymousAspect.element)
  
  return element_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AnonymousAspect::set_allocated_element(::std::string* element) {
  if (element != NULL) {
    
  } else {
    
  }
  element_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), element);
  // @@protoc_insertion_point(field_set_allocated:cyservice.AnonymousAspect.element)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cyservice

// @@protoc_insertion_point(global_scope)
